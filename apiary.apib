FORMAT: 1A
HOST: http://vmpro.eh.mi24.tv

# vmpro
VMPRO API is a *short texts saving* service similar to its physical paper presence on your table.


# Group SERVICEOBJECT
Beschreibung für das SERVICEOBJECT

## Create and List of SERVICEOBJECT [/base-url]

### List of existing SERVICEOBJECTs [GET]
Use this to retrieve a list of all existing SERVICEOBJECTS
+ Response 200 (application/json)

        [{"id": 1, "property": "value" }, {"id": 2, "property": "value" }]

### Create new SERVICEOBJECT [POST]
This create an new SERVICEOBJECT
+ Request (application/json)

        {"property": "value" }

+ Response 201

## Manipulate SERVICEOBJECT [/base-url/{theId}]
+ Parameters
    + theId (required, number, `2`) ... Numeric `id` of the VideoManager to perform action with. Has example value.

### Get SERVICEOBJECT [GET]
+ Response 200 (application/json)

        {"id": 1, "property": "value" }

### Update complete SERVICEOBJECT [PUT]
+ Request (application/json)

        {"id": 1, "property": "newvalue" }

+ Response 204

### Update parts of SERVICEOBJECT [PATCH]
+ Request (application/json)

        {"id": 1, "property": "newvalue" }

+ Response 204

### Delete SERVICEOBJECT [DELETE]
+ Response 204






# Group Trash Items
Deleted video blah

## Trash Item Collection [/vam/rest/vms/{videoManagerId}/trash]
A list of all video objects in trashcan as an array of objects

+ Parameters
    + videoManagerId (required, number, `2`) ... Numeric `id` of the VideoManager to perform action with. Has example value.

### List all Trash Items [GET]
+ Response 200 (application/json)

        [{
          "id": 1, "title": "properties and values of video object needed"
        }, {
          "id": 2, "title": "properties and values of video object needed"
        }]



# Group Embed Types
Embed Types related resources of the **VMPRO API**

## Embed Types Collection [/vam/rest/vms/{videoManagerId}/embedtype]
A list of all Embed Types as an array of objects

+ Parameters
    + videoManagerId (required, number, `2`) ... Numeric `id` of the VideoManager to perform action with. Has example value.

### List all Embed Types [GET]
+ Response 200 (application/json)

        [{
          "id": "HTML_CODE"
        }, {
          "id": "LINK_URL"
        }]


# Group Player
Player related resources of the **VMPRO API**

## Player Collection [/vam/rest/vms/{videoManagerId}/player]
A list of all Players as an array of objects

+ Parameters
    + videoManagerId (required, number, `2`) ... Numeric `id` of the VideoManager to perform action with. Has example value.

### List all Players [GET]
+ Response 200 (application/json)

        [{
          "id": 1, "title": "Player default (APIARY)"
        }, {
          "id": 2, "title": "Player green (APIARY)"
        }]



# Group Embed Codes
Embed Codes related resources of the **VMPRO API**


## Embed Code [/vam/rest/vms/{videoManagerId}/video/{videoId}/player/{playerId}/embedcode/{embedTypeId}]
A single Embed Code object with all its details

+ Parameters
    + videoManagerId (required, number, `2`) ... Numeric `id` of the VideoManager to perform action with. Has example value.
    + videoId (required, string, `74WGsUCJ3QJMjN8-LeYFpm`) ... string `id` of the selected video to perform action with. Has example value.
    + playerId (required, number, `2`) ... Numeric `id` of the Player to perform action with. Has example value.
    + embedTypeId (required, string, `HTML_CODE`) ... string `id` of the Player to perform action with. Has example value.

### Retrieve an Embed Code [GET]
+ Response 200 (application/json)

        {
          "id": "HTML_CODE",
          "code": "<mi24-video video-id="74WGsUCJ3QJMjN8-LeYFpm" player-id="2" config-type="vmpro" url="//d.video-cdn.net"></mi24-video><script src="//e.video-cdn.net/elfriede.js"></script>"
        }






# Group Statistics
Hier können die verschienden Reports bezogen werden.


## Statistics report for coverage [/vam/rest/vms/{videoManagerId}/statistics/report/coverage{?video-id,start-date,end-date}]
+ Parameters
    + videoManagerId (required, number, `2`) ... Numeric `id` of the VideoManager to perform action with. Has example value.
    + video-id (required, string, `74WGsUCJ3QJMjN8-LeYFpm`) ... String `id` of the selected video to perform action with
    + start-date (required, number, `1388530800000`) ... Numeric `value` of start date
    + end-date (required, number, `1388530800000`) ... Numeric `value` of end date

### Get statistics report for coverage [GET]
+ Response 200 (application/json)

        {
            "totalLength": 12000,
            "data": [
                {
                    "timeStamp": 5000,
                    "value": 5
                },
                {
                    "timeStamp": 5000,
                    "value": 3
                }
            ]
        }


## Statistics report for views [/vam/rest/vms/{videoManagerId}/statistics/report/views{?video-id,start-date,end-date}]
+ Parameters
    + videoManagerId (required, number, `2`) ... Numeric `id` of the VideoManager to perform action with. Has example value.

### Get statistics report for views [GET]
+ Response 200 (application/json)

        [
            {
                "timeStamp": 1388530800000,
                "value": 5
            },
            {
                "timeStamp": 1388617200000,
                "value": 10
            }
        ]


## Statistics report for plays [/vam/rest/vms/{videoManagerId}/statistics/report/plays{?video-id,start-date,end-date}]
+ Parameters
    + videoManagerId (required, number, `2`) ... Numeric `id` of the VideoManager to perform action with. Has example value.

### Get statistics report for plays [GET]
+ Response 200 (application/json)

        [
            {
                "timeStamp": 1388530800000,
                "value": 3
            },
            {
                "timeStamp": 1388617200000,
                "value": 8
            }
        ]
